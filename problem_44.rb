#Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
#1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#t can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
#Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

# Test to check if a number is pentagonal
def is_pentagonal?(num)
	# Uses inverse function of pentagonal formula to get double value of n
	test = (Math.sqrt(1 + 24 * num) + 1.0) / 6.0;
	# Returns true if n is an integer
	return test == test.to_i
end

def pentagonal_nums
	pentagonals = []
	d = 0

	until d > 0
		# Finds next pentagonal number and pushes to array
		n = pentagonals.length+1
		pentagonals << n*(3*n-1)/2
		puts pentagonals.last

		# Checks all other pentagonals in array with newly discovered pentagonal
		pentagonals[0...pentagonals.length-1].each do |k|
			sum = pentagonals.last + k
			difference = pentagonals.last - k
			# If sum and difference are pentagonal, set d to break from while loop and print result
			if is_pentagonal?(sum) && is_pentagonal?(difference)
				d = difference.abs
				puts "D = " + d.to_s
			end
		end
	end
end

pentagonal_nums
# Returns 5482660